system ServiceRegistry {
    produces ServiceDiscovery;
}

service ServiceDiscovery {
    method Register(ServiceRegistryEntry);
    method Unregister(ServiceRegistryEntry);
    method Query(ServiceQueryForm): ServiceQueryResult;
}

implement ServiceDiscovery using HTTP/JSON {
    property BasePath: "/serviceregistry";

    method Register {
        Method: "POST",
        Path: "/register",
    }

    method Unregister {
        Method: "PUT",
        Path: "/remove",
    }

    method Query {
        Method: "PUT",
        Path: "/query",
    }
}

record ServiceRegistryEntry {
    @Doc("
        The Arrowhead Service object that is provided.
    ")
    ProvidedService: ArrowheadService,

    @Doc("
        ArrowheadSystem that is providing the Service.
    ")
    Provider: ArrowheadSystem,

    @Doc("
        The port where the provided service can be consumed.
    ")
    Port: U16,

    @Doc("
        The subpath of the Service within the host (address:port) of the
        Provider. This can be a REST URL or MQTT topic name for example.
    ")
    ServiceURI: String,

    @Doc("
        The version numbering of the Service provided.
    ")
    Version: U32,

    @Doc("
        True, if the service is provided via UDP. By default, it is false.
    ")
    UDP: Boolean,

    @Doc("
        Service validity time period expressed in seconds. This gets converted
        to a date-time, and stored in the database.
    ")
    TTL: U32,

    @Doc("
        Metadata belonging to a service/provider pair.
    ")
    Metadata: String,
}

record ServiceQueryForm {
    @Doc("
        The Arrowhead Service object that is looked for.
    ")
    Service: ArrowheadService,

    @Doc("
        True, if service metadata shall be taken into account during query.
    ")
    MetadataSearch: Boolean,

    @Doc("
        True, if the selected (query fitting) Application Systems shall be
        pinged to see if theyâ€™re alive.
    ")
    PingProviders: Boolean,

    @Doc("
        The minimum version of the Service we are looking for.
    ")
    Version: U32,
}

record ServiceQueryResult {
    ServiceQueryData: List<ServiceRegistryEntry>,
}